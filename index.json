[{"categories":["ios"],"content":"fastlane简介 fastlane是一个用来自动化打包和发布的工具,可以用来自动化打包,上传到App Store或者TestFlight,也可以用来自动化发布到fir或者蒲公英等平台,还可以用来自动化生成icon和splash等等,总之,fastlane是一个非常强大的工具,可以大大提高开发效率,减少出错的概率,下面就来介绍一下fastlane的使用 ","date":"2023-07-04","objectID":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/:1:0","tags":["iOS"],"title":"Fastlane自动打包","uri":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/"},{"categories":["ios"],"content":"使用 ","date":"2023-07-04","objectID":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/:2:0","tags":["iOS"],"title":"Fastlane自动打包","uri":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/"},{"categories":["ios"],"content":"安装 使用brew安装 brew install fastlane ","date":"2023-07-04","objectID":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/:2:1","tags":["iOS"],"title":"Fastlane自动打包","uri":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/"},{"categories":["ios"],"content":"初始化 在项目根目录下执行 fastlane init 然后选择2来初始化fastlane配置文件,这样就会在项目根目录下生成一个fastlane文件夹,里面有一个Fastfile文件,这个文件就是fastlane的配置文件,我们可以在这个文件中配置自动化打包的一些参数,比如bundleId等等,也可以在这个文件中配置自动化上传到App Store或者TestFlight等等,具体的配置可以参考fastlane官方文档 ","date":"2023-07-04","objectID":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/:2:2","tags":["iOS"],"title":"Fastlane自动打包","uri":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/"},{"categories":["ios"],"content":"以下是我自己上传到蒲公英的脚本 ENV[\"FASTLANE_XCODEBUILD_SETTINGS_TIMEOUT\"] = \"120\" # 设置超时时间,不然会报超时错误 default_platform(:ios) platform :ios do desc \"Description of what the lane does\" lane :beta do gym( export_method: \"ad-hoc\", scheme: \"XXX\", # 项目的scheme configuration: \"Release\" ) pgyer(api_key: \"xxx\") # 蒲公英的api_key,可到蒲公英网站查看 end end 打包的时候到项目根目录执行: fastlane beta ","date":"2023-07-04","objectID":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/:3:0","tags":["iOS"],"title":"Fastlane自动打包","uri":"/fastlane%E8%87%AA%E5%8A%A8%E6%89%93%E5%8C%85/"},{"categories":[],"content":"升级electron到最新版本 sudo npm install electron@latest 升级electron-packager到最新版本 sudo npm install electron-packager@latest 升级electron-builder到最新版本 sudo npm install electron-builder@latest ","date":"2023-06-08","objectID":"/electron/:0:0","tags":[],"title":"Electron","uri":"/electron/"},{"categories":[],"content":"问题 当文本是链接时候,会超出组件显示,如下图,红色为text组件: 超出组件 ","date":"2023-05-31","objectID":"/text%E7%BB%84%E4%BB%B6%E6%98%BE%E7%A4%BA%E9%93%BE%E6%8E%A5%E6%96%87%E6%9C%AC%E8%B6%85%E5%87%BA%E7%BB%84%E4%BB%B6/:1:0","tags":["uni-app","vue"],"title":"Text组件显示链接文本超出组件","uri":"/text%E7%BB%84%E4%BB%B6%E6%98%BE%E7%A4%BA%E9%93%BE%E6%8E%A5%E6%96%87%E6%9C%AC%E8%B6%85%E5%87%BA%E7%BB%84%E4%BB%B6/"},{"categories":[],"content":"解决 /* 单词换行 */ word-break: break-all; ","date":"2023-05-31","objectID":"/text%E7%BB%84%E4%BB%B6%E6%98%BE%E7%A4%BA%E9%93%BE%E6%8E%A5%E6%96%87%E6%9C%AC%E8%B6%85%E5%87%BA%E7%BB%84%E4%BB%B6/:2:0","tags":["uni-app","vue"],"title":"Text组件显示链接文本超出组件","uri":"/text%E7%BB%84%E4%BB%B6%E6%98%BE%E7%A4%BA%E9%93%BE%E6%8E%A5%E6%96%87%E6%9C%AC%E8%B6%85%E5%87%BA%E7%BB%84%E4%BB%B6/"},{"categories":[],"content":"uni小程序弹出组件滑动穿透问题解决方案 示例: @touchmove.stop.prevent=\"moveStop\" \u003cview @touchmove.stop.prevent=\"moveStop\"\u003e \u003cu-popup :show=\"show\" class=\"approval-popup\" mode=\"bottom\" :round=\"18\" @close=\"close\"\u003e \u003c/u-popup\u003e \u003c/view\u003e const moveStop = (e) =\u003e { e.stopPropagation(); }; ","date":"2023-05-18","objectID":"/uni-popup%E7%AD%89%E5%BC%B9%E5%87%BA%E7%BB%84%E4%BB%B6%E6%BB%91%E5%8A%A8%E7%A9%BF%E9%80%8F%E9%97%AE%E9%A2%98/:1:0","tags":["uni-app","vue"],"title":"Uni Popup等弹出组件滑动穿透问题","uri":"/uni-popup%E7%AD%89%E5%BC%B9%E5%87%BA%E7%BB%84%E4%BB%B6%E6%BB%91%E5%8A%A8%E7%A9%BF%E9%80%8F%E9%97%AE%E9%A2%98/"},{"categories":[],"content":"uni-popup 带圆角的情况下，底部安全区域问题 官方自带了一个popup组件，但是在ios手机上，如果popup组件带圆角，会出现底部安全区域问题，如下图所示： 底部安全区域问题 ","date":"2023-05-18","objectID":"/uni-popup%E7%BB%84%E4%BB%B6%E5%BA%95%E9%83%A8%E5%AE%89%E5%85%A8%E5%8C%BA%E5%9F%9F%E9%97%AE%E9%A2%98/:1:0","tags":["uni-app","vue"],"title":"Uni Popup组件底部安全区域问题","uri":"/uni-popup%E7%BB%84%E4%BB%B6%E5%BA%95%E9%83%A8%E5%AE%89%E5%85%A8%E5%8C%BA%E5%9F%9F%E9%97%AE%E9%A2%98/"},{"categories":[],"content":"解决方案 :safeArea=false \u003cuni-popup type=\"bottom\" :safeArea=false\u003e \u003cview class=\"content\"\u003e \u003cview\u003e标题\u003c/view\u003e \u003cview\u003e内容\u003c/view\u003e \u003c/view\u003e \u003c/uni-popup\u003e .content { background-color: #fff; border-radius: 20upx 20upx 0 0; /*兼容 IOS\u003c11.2*/ padding-bottom: constant(safe-area-inset-bottom); /*兼容 IOS\u003e11.2*/ padding-bottom: env(safe-area-inset-bottom); } ","date":"2023-05-18","objectID":"/uni-popup%E7%BB%84%E4%BB%B6%E5%BA%95%E9%83%A8%E5%AE%89%E5%85%A8%E5%8C%BA%E5%9F%9F%E9%97%AE%E9%A2%98/:2:0","tags":["uni-app","vue"],"title":"Uni Popup组件底部安全区域问题","uri":"/uni-popup%E7%BB%84%E4%BB%B6%E5%BA%95%E9%83%A8%E5%AE%89%E5%85%A8%E5%8C%BA%E5%9F%9F%E9%97%AE%E9%A2%98/"},{"categories":[],"content":" @objc func appDidEnterBackground() { // 要判断当前应用程序状态是否为后台状态 guard UIApplication.shared.applicationState == .background else { return } // todo something } ","date":"2023-05-17","objectID":"/%E9%80%80%E5%88%B0%E5%90%8E%E5%8F%B0%E9%80%9A%E7%9F%A5%E5%BC%95%E8%B5%B7%E7%9A%84%E5%B4%A9%E6%BA%83/:0:0","tags":[],"title":"退到后台通知引起的崩溃","uri":"/%E9%80%80%E5%88%B0%E5%90%8E%E5%8F%B0%E9%80%9A%E7%9F%A5%E5%BC%95%E8%B5%B7%E7%9A%84%E5%B4%A9%E6%BA%83/"},{"categories":[],"content":"异步函数调用this找不到方法 that 一下; const that = this; promise { then(res =\u003e { that.xxx(); }) } ","date":"2023-05-10","objectID":"/%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8this%E6%89%BE%E4%B8%8D%E5%88%B0%E6%96%B9%E6%B3%95/:1:0","tags":["uni-app","vue"],"title":"异步函数调用this找不到方法","uri":"/%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0%E8%B0%83%E7%94%A8this%E6%89%BE%E4%B8%8D%E5%88%B0%E6%96%B9%E6%B3%95/"},{"categories":[],"content":"Uni页面撑满整个view 设置了父元素高度100%后,没有撑满整个view,如下图所示: 示例 ","date":"2023-05-08","objectID":"/uni%E9%A1%B5%E9%9D%A2%E6%92%91%E6%BB%A1%E6%95%B4%E4%B8%AAview/:1:0","tags":["uni-app","vue"],"title":"Uni页面撑满整个view","uri":"/uni%E9%A1%B5%E9%9D%A2%E6%92%91%E6%BB%A1%E6%95%B4%E4%B8%AAview/"},{"categories":[],"content":"解决方法 增加如下样式代码,uni-page-body,html,body{height:100%}: \u003cstyle lang=\"scss\" scoped\u003e uni-page-body,html,body{height:100%} .page { display: flex; background-color: #FFFFFF; height: 100%; } \u003c/style\u003e ","date":"2023-05-08","objectID":"/uni%E9%A1%B5%E9%9D%A2%E6%92%91%E6%BB%A1%E6%95%B4%E4%B8%AAview/:2:0","tags":["uni-app","vue"],"title":"Uni页面撑满整个view","uri":"/uni%E9%A1%B5%E9%9D%A2%E6%92%91%E6%BB%A1%E6%95%B4%E4%B8%AAview/"},{"categories":[],"content":"效果 效果 ","date":"2023-05-08","objectID":"/uni%E9%A1%B5%E9%9D%A2%E6%92%91%E6%BB%A1%E6%95%B4%E4%B8%AAview/:3:0","tags":["uni-app","vue"],"title":"Uni页面撑满整个view","uri":"/uni%E9%A1%B5%E9%9D%A2%E6%92%91%E6%BB%A1%E6%95%B4%E4%B8%AAview/"},{"categories":[],"content":"v-show在微信小程序中不生效 \u003cstyle lang=\"scss\" scoped\u003e /* #ifdef MP-WEIXIN */ view[hidden] { display: none !important; } /* #endif */ \u003c/style\u003e 【具体原因】","date":"2023-05-08","objectID":"/v-show%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%B8%8D%E7%94%9F%E6%95%88/:1:0","tags":["uni-app","vue"],"title":"v-show在微信小程序中不生效","uri":"/v-show%E5%9C%A8%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E4%B8%AD%E4%B8%8D%E7%94%9F%E6%95%88/"},{"categories":[],"content":"v-show在微信小程序中不生效 【v-show在微信小程序中不生效】 ","date":"2023-05-08","objectID":"/uni%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/:1:0","tags":["uni-app","vue"],"title":"Uni开发遇到的一些问题汇总","uri":"/uni%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"},{"categories":[],"content":"Uni页面撑满整个view,设置高度100%无效 【Uni页面撑满整个view,设置高度100%无效】 ","date":"2023-05-08","objectID":"/uni%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/:2:0","tags":["uni-app","vue"],"title":"Uni开发遇到的一些问题汇总","uri":"/uni%E5%BC%80%E5%8F%91%E9%81%87%E5%88%B0%E7%9A%84%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98/"},{"categories":["iOS"],"content":"iOS原生API录音功能","date":"2023-04-23","objectID":"/ios%E5%BD%95%E9%9F%B3/","tags":["iOS","AVFoundation"],"title":"iOS录音功能","uri":"/ios%E5%BD%95%E9%9F%B3/"},{"categories":["iOS"],"content":"前言 iOS原生API录音功能 ","date":"2023-04-23","objectID":"/ios%E5%BD%95%E9%9F%B3/:1:0","tags":["iOS","AVFoundation"],"title":"iOS录音功能","uri":"/ios%E5%BD%95%E9%9F%B3/"},{"categories":["iOS"],"content":"代码 import AVFoundation class Recorder { var recorder: AVAudioRecorder? func startRecord() { let session = AVAudioSession.sharedInstance() do { try session.setCategory(.playAndRecord, mode: .default, options: []) try session.setActive(true, options: []) session.requestRecordPermission { [unowned self] allowed in DispatchQueue.main.async { if allowed { self.startRecording() } else { // failed to record! } } } } catch { // failed to record! } } func startRecording() { // 输出mav格式 let audioFilename = getDocumentsDirectory().appendingPathComponent(\"recording.wav\") let settings = [ AVFormatIDKey: Int(kAudioFormatLinearPCM), AVSampleRateKey: 44100, AVNumberOfChannelsKey: 2, AVEncoderAudioQualityKey: AVAudioQuality.high.rawValue ] do { recorder = try AVAudioRecorder(url: audioFilename, settings: settings) recorder?.record() } catch { finishRecording(success: false) } } func finishRecording(success: Bool) { recorder?.stop() recorder = nil if success { print(\"Finished recording\") } else { print(\"Failed recording\") } } func getDocumentsDirectory() -\u003e URL { let paths = FileManager.default.urls(for: .documentDirectory, in: .userDomainMask) return paths[0] } func stopRecord() { finishRecording(success: true) } } ","date":"2023-04-23","objectID":"/ios%E5%BD%95%E9%9F%B3/:2:0","tags":["iOS","AVFoundation"],"title":"iOS录音功能","uri":"/ios%E5%BD%95%E9%9F%B3/"},{"categories":["iOS"],"content":"使用 let recorder = Recorder() // 初始化 recorder.startRecord() // 开始录音 recorder.stopRecord() // 结束录音 ","date":"2023-04-23","objectID":"/ios%E5%BD%95%E9%9F%B3/:3:0","tags":["iOS","AVFoundation"],"title":"iOS录音功能","uri":"/ios%E5%BD%95%E9%9F%B3/"},{"categories":["iOS"],"content":"使用form-data上传 private func recordComplete() { // 1. 获取录音文件 let filePath = recorder.getDocumentsDirectory().appendingPathComponent(\"recording.wav\") // 2. 上传录音文件地址 let uploadUrl = \"http://xxx.com/upload\" // 3. 设置请求头 let headers: HTTPHeaders = [ \"Content-type\": \"multipart/form-data\", \"Accept\": \"application/json\", ] // 4. 使用alamofire上传 AF.upload(multipartFormData: { (multipartFormData) in multipartFormData.append(filePath, withName: \"file\", fileName: \"recoding.wav\", mimeType: \"audio/wav\") }, to: uploadUrl, method: .post, headers: headers).responseJSON { (response) in switch response.result { case .success(let value): print(value) case .failure(let error): print(\"error: \\(error)\") } } } ","date":"2023-04-23","objectID":"/ios%E5%BD%95%E9%9F%B3/:4:0","tags":["iOS","AVFoundation"],"title":"iOS录音功能","uri":"/ios%E5%BD%95%E9%9F%B3/"},{"categories":[],"content":"收集一些AI生产力工具，方便自己和大家使用。","date":"2023-04-14","objectID":"/ai%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/","tags":["AI"],"title":"AI生产力工具","uri":"/ai%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/"},{"categories":[],"content":"AI语言 【Poe】(chatgpt-4部分收费其他免费) ","date":"2023-04-14","objectID":"/ai%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/:1:0","tags":["AI"],"title":"AI生产力工具","uri":"/ai%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/"},{"categories":[],"content":"AI编程 【Copilot】(收费) ","date":"2023-04-14","objectID":"/ai%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/:2:0","tags":["AI"],"title":"AI生产力工具","uri":"/ai%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/"},{"categories":[],"content":"AI抠图 【lama-cleaner】(开源)","date":"2023-04-14","objectID":"/ai%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/:3:0","tags":["AI"],"title":"AI生产力工具","uri":"/ai%E7%94%9F%E4%BA%A7%E5%8A%9B%E5%B7%A5%E5%85%B7/"},{"categories":["ios"],"content":"前言 记录Xcode等相关的问题 ","date":"2023-04-03","objectID":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:1:0","tags":["Xcode14","ios"],"title":"Xcode14.3问题记录","uri":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"Xcode14.3 报错 ","date":"2023-04-03","objectID":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:2:0","tags":["Xcode14","ios"],"title":"Xcode14.3问题记录","uri":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"更新后先重置下pod文件 在podfile文件中增加如下: post_install do |installer| installer.generated_projects.each do |project| project.targets.each do |target| target.build_configurations.each do |config| config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '11.0' end end end end 然后依次执行: pod deintegrate pod install 编译看是否报错? 其他报错看下面继续: ","date":"2023-04-03","objectID":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:2:1","tags":["Xcode14","ios"],"title":"Xcode14.3问题记录","uri":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"Xcode14.3 编译报错(手动修改为11.0) pod第三方库的支持版本改为11.0以上 设置版本 ","date":"2023-04-03","objectID":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:2:2","tags":["Xcode14","ios"],"title":"Xcode14.3问题记录","uri":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"Xcode14.3 打包报错command phasescriptexecution failed with a nonzero exit code 如图脚本文件增加 -f 示例 更新: 新版本cocoapods已修复此问题, 无需手动修改 ","date":"2023-04-03","objectID":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:2:3","tags":["Xcode14","ios"],"title":"Xcode14.3问题记录","uri":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"iOS13系统闪退问题 最新发现, 已退回14.2 , 坑! 崩溃日志: Date/Time: 2023-04-06 10:25:29.5699 +0800 Launch Time: 2023-04-06 10:25:29.5246 +0800 OS Version: iPhone OS 13.7 (17H35) Release Type: User Baseband Version: 7.70.01 Report Version: 104 Exception Type: EXC_CRASH (SIGABRT) Exception Codes: 0x0000000000000000, 0x0000000000000000 Exception Note: EXC_CORPSE_NOTIFY Termination Description: DYLD, Assertion failed: (gotLocation), function applyFixupsToImage_block_invoke_3, file /Library/Caches/com.apple.xbs/Sources/dyld/dyld-750.4.2/dyld3/Loading.cpp, line 779. Highlighted by Thread: 0 Backtrace not available Unknown thread crashed with ARM Thread State (64-bit): x0: 0x0000000000000006 x1: 0x0000000000000009 x2: 0x000000016d117e70 x3: 0x0000000000000014 x4: 0x000000016d117a70 x5: 0x0000000000000000 x6: 0x000000016d1187f0 x7: 0x000000016d118908 x8: 0x0000000000000020 x9: 0x0000000000000009 x10: 0x2e342e3035372d64 x11: 0x2f33646c79642f32 x12: 0x2f33646c79642f32 x13: 0x2e676e6964616f4c x14: 0x6e696c202c707063 x15: 0x000a2e3937372065 x16: 0x0000000000000209 x17: 0x0000000000000000 x18: 0x0000000000000000 x19: 0x0000000000000000 x20: 0x000000016d117a70 x21: 0x0000000000000014 x22: 0x000000016d117e70 x23: 0x0000000000000009 x24: 0x0000000000000006 x25: 0x0000000000000392 x26: 0x000000000000030a x27: 0x000000010758ac70 x28: 0x0000000000117cf0 fp: 0x000000016d117a40 lr: 0x000000010784fee8 sp: 0x000000016d117a00 pc: 0x0000000107848f68 cpsr: 0x40000000 esr: 0x00000000 Address size fault Binary images description not available Error Formulating Crash Report: Failed to create CSSymbolicatorRef - corpse still valid ¯\\_(ツ)_/¯ EOF ","date":"2023-04-03","objectID":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:2:4","tags":["Xcode14","ios"],"title":"Xcode14.3问题记录","uri":"/xcode%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":[],"content":"前言 习惯了用MAC电脑进行工作开发,搬砖的辅助生产工具也是必不可少,根据自己的经验分享一些常用的软件或者技巧,提升开发效率. ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:1:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"终端 【iterm2】 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:2:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"iterm2快捷键 快捷键组合 说明 ctrl + a 到行首 ctrl + e 行末 ctrl + u 删除一行 ⌘ + r（ctrl + l） 清屏，其实是滚到新的一屏，并没有清空。 ctrl + r 搜索命令历史，这个大家都应该很熟悉了 ctrl + d 删除当前字符 ctrl + h 删除之前的字符 ctrl + w 删除光标前的单词 ctrl + k 删除到文本末尾 ctrl + t 交换光标处文本 ⌘ + —/+/0 调整字体大小 ctrl + f/b 前进后退，相当于左右方向键，但是显然比移开手按方向键更快 ctrl + p 上一条命令，相当于方向键上 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:2:1","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"窗口操作 新建窗口： shift + command + d（横向）command + d（竖向） 关闭窗口： shift + command + w 前一个窗口： command + ` 后一个窗口： command + ~ 进入窗口 1,2,3： option + command + 编号 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:2:2","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"标签页操作 新建标签页: Command + T 关闭标签页: Command + W 前一个标签页: Command + 左方向键，Shift + Command + [ 后一个标签页: Command + 右方向键，Shitf + Command + ] 进入标签页1，2，3…: Command + 标签页编号 Expose 标签页: Option + Command + E（将标签页打撒到全屏，并可以全局搜索所有的标签页） ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:2:3","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"面板操作 垂直分割: Command + D 水平分割: Shift + Command + D 前一个面板: Command + [ 后一个面板: Command + ] 切换到上/下/左/右面板: Option + Command + 上下左右方向键 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:2:4","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"tree brew install tree tree ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:3:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"oh-my-zsh curl -L https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh 打开 .zshrc文件 修改插件配置(自带插件) plugins=(colored-man-pages pod git git-flow ruby gem python pip node npm bower sublime) ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:4:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"新增其他插件,比如zsh-syntax-highlighting高亮插件 cd ~/.oh-my-zsh/custom/plugins git clone https://github.com/zsh-users/zsh-syntax-highlighting.git 再次修改.zshrc文件插件配置 在sublime后面加上zsh-syntax-highlighting 然后执行 source ~/.zshrc 比如执行 pod install pod install ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:4:1","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"Go2Shell 快捷打开当前文件路径的终端,并且支持iterm2 【官网】 效果如下: Go2Shell ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:5:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"Xcodes 【Xcodes】 非常方便的管理Xcode的工具,优点: 不必等苹果商店更新 可安装测试版本 多版本安装 下载快,不会卡99% Xcodes ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:6:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"AppCode 【AppCode】 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:7:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"MAC自带邮箱增加QQ邮箱 首先登录网页端QQ邮箱,然后到设置中生成授权码,在mac中添加QQ邮箱时密码填授权码即可. 授权码 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:8:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"超级右键lite 超级右键 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:9:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"Snipaste 超好用的截图贴板工具 【Snipaste】 snipaste ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:10:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"抓包工具 Windows平台有finder Mac平台有Charles 都是比较常用的,因为我是mac刚开始用的也是Charles,但是因为公司路由器等原因,经常性的无法抓包,这里分享另一个开源工具 【Whistle】 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:11:0","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"1.安装 npm install -g whistle ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:11:1","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"2.启动 w2 start 启动之后可以在浏览器中输入终端提示链接打开抓包工具 启动 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:11:2","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"3.停止 w2 stop ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:11:3","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":[],"content":"3.手机配置 手机连接电脑,打开wifi,选择电脑的wifi 手机设置代理,代理地址填写电脑的ip地址,端口号填写8899 手机用safari输入rootca.pro下载证书,安装证书,也可以到网页设置页面扫码安装如下图 到手机的设置中,找到通用-\u003e关于本机-\u003e证书信任设置,找到刚才安装的证书,打开信任开关 电脑打开http://localhost:8899/点击左侧network-\u003eenable开启抓包 扫码安装证书 抓包 ","date":"2023-03-16","objectID":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/:11:4","tags":[],"title":"MAC工作环境","uri":"/mac%E5%B7%A5%E4%BD%9C%E7%8E%AF%E5%A2%83/"},{"categories":["iOS"],"content":"前言 在阅读Telegram源码的过程中,抽出业务代码,留下有用的代码,同时也修改或总结一些自己遇到的好用的方法. ","date":"2023-02-21","objectID":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:1:0","tags":["String","iOS"],"title":"String的一些扩展","uri":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"货币字符串 ","date":"2023-02-21","objectID":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:2:0","tags":["String","iOS"],"title":"String的一些扩展","uri":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"数字格式化 去除其他字符,只留数字 public func numeralFormat() -\u003e String { return replacingOccurrences(of:\"[^0-9]\", with: \"\", options: .regularExpression) } ","date":"2023-02-21","objectID":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:2:1","tags":["String","iOS"],"title":"String的一些扩展","uri":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"判断是否是表示0的字符串 比如 “0”,“0.0” 字符串表示的值都是0 public var representsZero: Bool { return numeralFormat().replacingOccurrences(of: \"0\", with: \"\").count == 0 } ","date":"2023-02-21","objectID":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:2:2","tags":["String","iOS"],"title":"String的一些扩展","uri":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"是否包含数字 public var hasNumbers: Bool { return numeralFormat().count \u003e 0 } ","date":"2023-02-21","objectID":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:2:3","tags":["String","iOS"],"title":"String的一些扩展","uri":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"字符串最后的索引到最后一个数字的偏移 从结束索引到字符串最后一个数字之后的索引的偏移量。 例如，对于字符串\"123some\"，最后一个数字位置是4，因为从字符串结束索引到3的索引 偏移量为4，“e, m, o and s” public var lastNumberOffsetFromEnd: Int? { guard let indexOfLastNumber = lastIndex(where: { $0.isNumber }) else { return nil } let indexAfterLastNumber = index(after: indexOfLastNumber) return distance(from: endIndex, to: indexAfterLastNumber) } ","date":"2023-02-21","objectID":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:2:4","tags":["String","iOS"],"title":"String的一些扩展","uri":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"更新货币字符串的十进制分隔符位置 decimalDigits:货币格式化字符串的小数位数 mutating public func updateDecimalSeparator(decimalDigits: Int) { guard decimalDigits != 0 \u0026\u0026 count \u003e= decimalDigits else { return } let decimalsRange = index(endIndex, offsetBy: -decimalDigits)..\u003cendIndex let decimalChars = self[decimalsRange] replaceSubrange(decimalsRange, with: \".\" + decimalChars) } ","date":"2023-02-21","objectID":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:2:5","tags":["String","iOS"],"title":"String的一些扩展","uri":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"补齐字符串 ","date":"2023-02-21","objectID":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:3:0","tags":["String","iOS"],"title":"String的一些扩展","uri":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"十六进制对齐 右对齐 func rightJustified(width: Int, pad: String = \" \", truncate: Bool = false) -\u003e String { guard width \u003e count else { return truncate ? String(suffix(width)) : self } return String(repeating: pad, count: width - count) + self } 左对齐 func leftJustified(width: Int, pad: String = \" \", truncate: Bool = false) -\u003e String { guard width \u003e count else { return truncate ? String(prefix(width)) : self } return self + String(repeating: pad, count: width - count) } 例如联动 Color的十六进制字符串 以黑色(#000000)为例: String(UIColor.black.rgb, radix: 16) // print 0 String(UIColor.black.rgb, radix: 16, uppercase: false).rightJustified(width: 6,pad: \"0\") // print 000000 ","date":"2023-02-21","objectID":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:3:1","tags":["String","iOS"],"title":"String的一些扩展","uri":"/string%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":[],"content":"脚本配置Xray 配置xray ","date":"2023-02-15","objectID":"/%E5%B7%A5%E5%85%B7/:1:0","tags":[],"title":"工具","uri":"/%E5%B7%A5%E5%85%B7/"},{"categories":["iOS"],"content":"UIColor的一些功能扩展,获取属性值以及初始化等方法","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"前言 在阅读Telegram源码的过程中,抽出业务代码,留下有用的代码,同时也修改或总结一些自己遇到的好用的方法. ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:1:0","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"颜色 wiki 红绿蓝三原色 (RGB) 发光的媒体（比如电视机）使用红、绿 和蓝加色的三元色，每种光尽可能只刺激针对它们的锥状细胞而不刺激其它的锥状细胞。这个系统的色域占人可以感受到的色彩空间的大部分，因此电视机和电脑萤幕使用这个系统。 理论上我们也可以使用其他颜色作为元色，但使用红、绿和蓝我们可以最大地达到人的色彩空间。遗憾的是对于红、绿和蓝色没有固定的波长的定义，因此不同的技术仪器可能使用不同的波长从而在萤幕上产生稍微不同的颜色。 色相、色度和明度系统 (HSB) 在制作计算机图像时人们往往使用另一种颜色系统。这个颜色系统使用三项分类，分别叫做色相（hue）、色度（saturation）和明度（brightness）的系数。色调决定到底哪一种颜色被使用，色度决定颜色的纯度，亮度决定颜色的明暗程度 参考wiki ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:2:0","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"UIColor初始化扩展 rgb argb hex数值或者字符串颜色值的初始化 convenience init(rgb: UInt64) { self.init(red: CGFloat((rgb \u003e\u003e 16) \u0026 0xff) / 255.0, green: CGFloat((rgb \u003e\u003e 8) \u0026 0xff) / 255.0, blue: CGFloat(rgb \u0026 0xff) / 255.0, alpha: 1.0) } convenience init(rgb: UInt64, alpha: CGFloat) { self.init(red: CGFloat((rgb \u003e\u003e 16) \u0026 0xff) / 255.0, green: CGFloat((rgb \u003e\u003e 8) \u0026 0xff) / 255.0, blue: CGFloat(rgb \u0026 0xff) / 255.0, alpha: alpha) } convenience init(argb: UInt64) { self.init(red: CGFloat((argb \u003e\u003e 16) \u0026 0xff) / 255.0, green: CGFloat((argb \u003e\u003e 8) \u0026 0xff) / 255.0, blue: CGFloat(argb \u0026 0xff) / 255.0, alpha: CGFloat((argb \u003e\u003e 24) \u0026 0xff) / 255.0) } convenience init?(hex: String) { let scanner = Scanner(string: hex) if hex.hasPrefix(\"#\") { scanner.scanLocation = 1 } var value: UInt64 = 0 if scanner.scanHexInt64(\u0026value) { if hex.count \u003e 7 { self.init(argb: value) } else { self.init(rgb: value) } } else { return nil } } 位移运算 左移:\u003c\u003c,右移:\u003e\u003e 对一个数进行按位左移或按位右移，相当于对这个数进行乘以 2 或除以 2 的运算。将一个整数左移一位，等价于将这个数乘以 2，同样地，将一个整数右移一位，等价于将这个数除以 2。 十六进制一个字符4位,例如 #AABBCC AA代表红,BB代表绿,CC代表蓝,三个值分别都以255为基数,要得到AA的值,可以按位与\u00260xFF0000 取反再右移16位的到0xAA即十进制170. ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:3:0","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"属性扩展 ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:4:0","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"alpha透明度 var alpha: CGFloat { var alpha: CGFloat = 0.0 if self.getRed(nil, green: nil, blue: nil, alpha: \u0026alpha) { return alpha } else if self.getWhite(nil, alpha: \u0026alpha) { return alpha } else { return 0.0 } } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:4:1","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"RGB值 var rgb: UInt64 { var red: CGFloat = 0.0 var green: CGFloat = 0.0 var blue: CGFloat = 0.0 if self.getRed(\u0026red, green: \u0026green, blue: \u0026blue, alpha: nil) { return (UInt64(max(0.0, red) * 255.0) \u003c\u003c 16) | (UInt64(max(0.0, green) * 255.0) \u003c\u003c 8) | (UInt64(max(0.0, blue) * 255.0)) } else if self.getWhite(\u0026red, alpha: nil) { return (UInt64(max(0.0, red) * 255.0) \u003c\u003c 16) | (UInt64(max(0.0, red) * 255.0) \u003c\u003c 8) | (UInt64(max(0.0, red) * 255.0)) } else { return 0 } } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:4:2","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"ARGB值 var argb: UInt64 { var red: CGFloat = 0.0 var green: CGFloat = 0.0 var blue: CGFloat = 0.0 var alpha: CGFloat = 0.0 if self.getRed(\u0026red, green: \u0026green, blue: \u0026blue, alpha: \u0026alpha) { return (UInt64(alpha * 255.0) \u003c\u003c 24) | (UInt64(max(0.0, red) * 255.0) \u003c\u003c 16) | (UInt64(max(0.0, green) * 255.0) \u003c\u003c 8) | (UInt64(max(0.0, blue) * 255.0)) } else if self.getWhite(\u0026red, alpha: \u0026alpha) { return (UInt64(max(0.0, alpha) * 255.0) \u003c\u003c 24) | (UInt64(max(0.0, red) * 255.0) \u003c\u003c 16) | (UInt64(max(0.0, red) * 255.0) \u003c\u003c 8) | (UInt64(max(0.0, red) * 255.0)) } else { return 0 } } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:4:3","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"HSB值 var hsb: (h: CGFloat, s: CGFloat, b: CGFloat) { var hue: CGFloat = 0.0 var saturation: CGFloat = 0.0 var brightness: CGFloat = 0.0 if self.getHue(\u0026hue, saturation: \u0026saturation, brightness: \u0026brightness, alpha: nil) { return (hue, saturation, brightness) } else { return (0.0, 0.0, 0.0) } } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:4:4","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"明度值 var lightness: CGFloat { var red: CGFloat = 0.0 var green: CGFloat = 0.0 var blue: CGFloat = 0.0 if self.getRed(\u0026red, green: \u0026green, blue: \u0026blue, alpha: nil) { return 0.2126 * red + 0.7152 * green + 0.0722 * blue } else if self.getWhite(\u0026red, alpha: nil) { return red } else { return 0.0 } } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:4:5","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"HEX字符串 var hexString: String { return String(rgb, radix: 16, uppercase: false).rightJustified(width: 6, pad: \"0\") } rightJustified extension String { func rightJustified(width: Int, pad: String = \" \", truncate: Bool = false) -\u003e String { guard width \u003e count else { return truncate ? String(suffix(width)) : self } return String(repeating: pad, count: width - count) + self } } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:4:6","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"方法扩展 ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:5:0","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"改变亮度明度(根据传入系数使亮度明度乘积得到新颜色) func withMultipliedBrightnessBy(_ factor: CGFloat) -\u003e UIColor { var hue: CGFloat = 0.0 var saturation: CGFloat = 0.0 var brightness: CGFloat = 0.0 var alpha: CGFloat = 0.0 self.getHue(\u0026hue, saturation: \u0026saturation, brightness: \u0026brightness, alpha: \u0026alpha) return UIColor(hue: hue, saturation: saturation, brightness: max(0.0, min(1.0, brightness * factor)), alpha: alpha) } 如下调整.red红色亮度比例从左到右分别为0.3,0.6,1(不改变) override func viewDidLoad() { super.viewDidLoad() let bgView1 = UIView(frame: CGRectMake(17, 100, 100, 100)) bgView1.backgroundColor = .red.withMultipliedBrightnessBy(0.3) self.view.addSubview(bgView1) let bgView2 = UIView(frame: CGRectMake(127, 100, 100, 100)) bgView2.backgroundColor = .red.withMultipliedBrightnessBy(0.6) self.view.addSubview(bgView2) let bgView3 = UIView(frame: CGRectMake(237, 100, 100, 100)) bgView3.backgroundColor = .red.withMultipliedBrightnessBy(1) self.view.addSubview(bgView3) } withMultipliedBrightnessBy ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:5:1","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"改变HSB值 func withMultiplied(hue: CGFloat, saturation: CGFloat, brightness: CGFloat) -\u003e UIColor { var hueValue: CGFloat = 0.0 var saturationValue: CGFloat = 0.0 var brightnessValue: CGFloat = 0.0 var alphaValue: CGFloat = 0.0 self.getHue(\u0026hueValue, saturation: \u0026saturationValue, brightness: \u0026brightnessValue, alpha: \u0026alphaValue) return UIColor(hue: max(0.0, min(1.0, hueValue * hue)), saturation: max(0.0, min(1.0, saturationValue * saturation)), brightness: max(0.0, min(1.0, brightnessValue * brightness)), alpha: alphaValue) } 如下调整.red颜色HSB值 private func setupViews2() { let bgView1 = UIView(frame: CGRectMake(17, 100, 100, 100)) bgView1.backgroundColor = .red.withMultiplied(hue: 1.034, saturation: 0.819, brightness: 0.633) self.view.addSubview(bgView1) let bgView2 = UIView(frame: CGRectMake(127, 100, 100, 100)) bgView2.backgroundColor = .red.withMultiplied(hue: 1.029, saturation: 0.77, brightness: 0.332) self.view.addSubview(bgView2) let bgView3 = UIView(frame: CGRectMake(237, 100, 100, 100)) bgView3.backgroundColor = .red.withMultiplied(hue: 1.034, saturation: 0.583, brightness: 1.234) self.view.addSubview(bgView3) } withMultiplied ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:5:2","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"混合颜色(alpha合成) 说明 RGB混合算法目前在常用到的算法是AlphaBlend. 计算公式如下:假设一幅图象是A，另一幅透明的图象是B，那么透过B去看A，看上去的图象C就是B和A的混合图象，设B图象的透明度为alpha(取值为0-1，1为完全透明，0为完全不透明). Alpha混合公式如下： R(C)=(1-alpha)*R(B) + alpha*R(A) G(C)=(1-alpha)*G(B) + alpha*G(A) B(C)=(1-alpha)*B(B) + alpha*B(A) R(x)、G(x)、B(x)分别指颜色x的RGB分量原色值。从上面的公式可以知道，Alpha其实是一个决定混合透明度的数值。 这里只对B图的Alpha进行了处理，但A图本身如果也有透明通道的，也需要进行一样的处理，即 A(C)=(1-alpha)*A(B) + alpha*A(A) 【验证链接】 【wiki】 【参考链接】 mixedWith func mixedWith(_ other: UIColor, alpha: CGFloat) -\u003e UIColor { let alpha = min(1.0, max(0.0, alpha)) let oneMinusAlpha = 1.0 - alpha var r1: CGFloat = 0.0 var r2: CGFloat = 0.0 var g1: CGFloat = 0.0 var g2: CGFloat = 0.0 var b1: CGFloat = 0.0 var b2: CGFloat = 0.0 var a1: CGFloat = 0.0 var a2: CGFloat = 0.0 if self.getRed(\u0026r1, green: \u0026g1, blue: \u0026b1, alpha: \u0026a1) \u0026\u0026 other.getRed(\u0026r2, green: \u0026g2, blue: \u0026b2, alpha: \u0026a2) { let r = r1 * oneMinusAlpha + r2 * alpha let g = g1 * oneMinusAlpha + g2 * alpha let b = b1 * oneMinusAlpha + b2 * alpha let a = a1 * oneMinusAlpha + a2 * alpha return UIColor(red: r, green: g, blue: b, alpha: a) } return self } 示例如下将0.5透明度的黄色覆盖到红色上面,透过上面的黄色看下面的红色,得到的颜色: private func setupViews3() { let bgView1 = UIView(frame: CGRectMake(17, 100, 100, 100)) bgView1.backgroundColor = .red self.view.addSubview(bgView1) let bgView2 = UIView(frame: CGRectMake(127, 100, 100, 100)) bgView2.backgroundColor = .yellow self.view.addSubview(bgView2) let bgView3 = UIView(frame: CGRectMake(237, 100, 100, 100)) bgView3.backgroundColor = .red.mixedWith(.yellow, alpha: 0.5) self.view.addSubview(bgView3) } mixedWith blitOver 和上面的mixedWith方法相反,表示覆盖到另一个颜色上面作为前景色. func blitOver(_ other: UIColor, alpha: CGFloat) -\u003e UIColor { let alpha = min(1.0, max(0.0, alpha)) var r1: CGFloat = 0.0 var r2: CGFloat = 0.0 var g1: CGFloat = 0.0 var g2: CGFloat = 0.0 var b1: CGFloat = 0.0 var b2: CGFloat = 0.0 var a1: CGFloat = 0.0 var a2: CGFloat = 0.0 if self.getRed(\u0026r1, green: \u0026g1, blue: \u0026b1, alpha: \u0026a1) \u0026\u0026 other.getRed(\u0026r2, green: \u0026g2, blue: \u0026b2, alpha: \u0026a2) { let resultingAlpha = max(0.0, min(1.0, alpha * a1)) let oneMinusResultingAlpha = 1.0 - resultingAlpha let r = r1 * resultingAlpha + r2 * oneMinusResultingAlpha let g = g1 * resultingAlpha + g2 * oneMinusResultingAlpha let b = b1 * resultingAlpha + b2 * oneMinusResultingAlpha let a: CGFloat = 1.0 return UIColor(red: r, green: g, blue: b, alpha: a) } return self } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:5:3","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"调整透明度倍数 func withMultipliedAlpha(_ alpha: CGFloat) -\u003e UIColor { var r1: CGFloat = 0.0 var g1: CGFloat = 0.0 var b1: CGFloat = 0.0 var a1: CGFloat = 0.0 if self.getRed(\u0026r1, green: \u0026g1, blue: \u0026b1, alpha: \u0026a1) { return UIColor(red: r1, green: g1, blue: b1, alpha: max(0.0, min(1.0, a1 * alpha))) } return self } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:5:4","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"篡改一个颜色到另一个颜色 说明 fraction取值范围为0~1,当为0时,返回当前颜色,当为1时,返回传入颜色. 从0到1的变化既是当前颜色到传入颜色的变化. func interpolateTo(_ color: UIColor, fraction: CGFloat) -\u003e UIColor? { let f = min(max(0, fraction), 1) var r1: CGFloat = 0.0 var r2: CGFloat = 0.0 var g1: CGFloat = 0.0 var g2: CGFloat = 0.0 var b1: CGFloat = 0.0 var b2: CGFloat = 0.0 var a1: CGFloat = 0.0 var a2: CGFloat = 0.0 if self.getRed(\u0026r1, green: \u0026g1, blue: \u0026b1, alpha: \u0026a1) \u0026\u0026 color.getRed(\u0026r2, green: \u0026g2, blue: \u0026b2, alpha: \u0026a2) { let r: CGFloat = CGFloat(r1 + (r2 - r1) * f) let g: CGFloat = CGFloat(g1 + (g2 - g1) * f) let b: CGFloat = CGFloat(b1 + (b2 - b1) * f) let a: CGFloat = CGFloat(a1 + (a2 - a1) * f) return UIColor(red: r, green: g, blue: b, alpha: a) } else { return self } } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:5:5","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"欧氏距离 说明 很多日常使用的“颜色差异”，是直接通过在一个“设备无关”的色彩空间里，进行欧氏距离的计算得到的。给定一个RGB（红绿蓝）的色彩空间，最简单的差异计算方式就是在这个三维空间里求两个点间的距离. 有不少人尝试将RGB三值加上权重，希望可以让得到的结果更加符合人类感官。一种做法是使用2、4、3： 【wiki】 private var colorComponents: (r: Int64, g: Int64, b: Int64) { var r: CGFloat = 0.0 var g: CGFloat = 0.0 var b: CGFloat = 0.0 if self.getRed(\u0026r, green: \u0026g, blue: \u0026b, alpha: nil) { return (Int64(max(0.0, r) * 255.0), Int64(max(0.0, g) * 255.0), Int64(max(0.0, b) * 255.0)) } else if self.getWhite(\u0026r, alpha: nil) { return (Int64(max(0.0, r) * 255.0), Int64(max(0.0, r) * 255.0), Int64(max(0.0, r) * 255.0)) } return (0, 0, 0) } func distance(to other: UIColor) -\u003e Int64 { let e1 = self.colorComponents let e2 = other.colorComponents let rMean = (e1.r + e2.r) / 2 let r = e1.r - e2.r let g = e1.g - e2.g let b = e1.b - e2.b let a1 = ((512 + rMean) * r * r) \u003e\u003e 8 let b1 = 4 * g * g let c1 = ((767 - rMean) * b * b) \u003e\u003e 8 return a1 + b1 + c1 } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:5:6","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"平均颜色 static func average(of colors: [UIColor]) -\u003e UIColor { var sr: CGFloat = 0.0 var sg: CGFloat = 0.0 var sb: CGFloat = 0.0 var sa: CGFloat = 0.0 for color in colors { var r: CGFloat = 0.0 var g: CGFloat = 0.0 var b: CGFloat = 0.0 var a: CGFloat = 0.0 color.getRed(\u0026r, green: \u0026g, blue: \u0026b, alpha: \u0026a) sr += r sg += g sb += b sa += a } return UIColor(red: sr / CGFloat(colors.count), green: sg / CGFloat(colors.count), blue: sb / CGFloat(colors.count), alpha: sa / CGFloat(colors.count)) } ","date":"2023-02-02","objectID":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/:5:7","tags":["UIColor","iOS","颜色"],"title":"UIColor的一些扩展","uri":"/uicolor%E7%9A%84%E4%B8%80%E4%BA%9B%E6%89%A9%E5%B1%95/"},{"categories":["iOS"],"content":"Swift中的只读属性,像OC一样隐藏set方法","date":"2023-02-01","objectID":"/swift%E4%B8%AD%E7%9A%84%E5%8F%AA%E8%AF%BB%E5%B1%9E%E6%80%A7/","tags":["iOS只读","Swift","OC"],"title":"iOS中的只读属性","uri":"/swift%E4%B8%AD%E7%9A%84%E5%8F%AA%E8%AF%BB%E5%B1%9E%E6%80%A7/"},{"categories":["iOS"],"content":"OC只读,Swift设置set私有private(set) public private(set) var someKey: String 当外部调用set方法时的报错信息: Cannot assign to property: 'somekey' setter is inaccessible OC表示只读readonly: @property (nonatomic, strong, readonly) NSString *someKey; ","date":"2023-02-01","objectID":"/swift%E4%B8%AD%E7%9A%84%E5%8F%AA%E8%AF%BB%E5%B1%9E%E6%80%A7/:1:0","tags":["iOS只读","Swift","OC"],"title":"iOS中的只读属性","uri":"/swift%E4%B8%AD%E7%9A%84%E5%8F%AA%E8%AF%BB%E5%B1%9E%E6%80%A7/"},{"categories":["ios"],"content":"Telegram开源iOS端代码编译学习记录","date":"2023-01-28","objectID":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/","tags":["Telegram","iOS"],"title":"Telegram-iOS编译打包","uri":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"前言 Telegram开源IM应用,虽然服务器代码不开源,但是可以从客户端的体验来看非常流畅,故下载编译学习记录. ","date":"2023-01-28","objectID":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/:1:0","tags":["Telegram","iOS"],"title":"Telegram-iOS编译打包","uri":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"创建应用(只编译Xcode工程此步骤不需要看) 打开官网,选择API development tools API development tools 填写自己的电报号码登录,验证码为官方TG给你发条验证消息: TG账号登录 选择API,Getting started下面的Creating an application Creating an application 然后在表单页面填写应用信息,如App名称等,最后提交即可. 注意 如果提交的时候出现报错Error,需要科学上网(全局模式). 生成的应用示例: 示例 ","date":"2023-01-28","objectID":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/:2:0","tags":["Telegram","iOS"],"title":"Telegram-iOS编译打包","uri":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"源码下载 iOS地址 git clone --recursive -j8 https://github.com/TelegramMessenger/Telegram-iOS.git 提醒 此处加参数是为了拉取子模块,子模块要拉取完整后续才能编译成功. ","date":"2023-01-28","objectID":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/:3:0","tags":["Telegram","iOS"],"title":"Telegram-iOS编译打包","uri":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"环境设置 打开下载的项目文件夹,找到versions.json文件,并打开: { \"app\": \"9.3\", \"bazel\": \"5.3.1\", \"xcode\": \"14.1\" } 确认到环境为Xcode为14.1版本,bazel要求5.3.1 由于我已经安装Xcode14.2版本,所以这里编辑Xcode版本号为当前电脑已安装Xcode版本. 安装bazel: brew install bazel XXX(版本号) 如果提示没有版本号,可以去官网直接看文档下载安装. 如果你是第一次安装bazel到此环境问题就解决了,安装过的看下面👇🏻 由于bazel我是之前已经安装过(通过homebrew安装),默认为最新版本,需要切换为配置文件版本,不然后续编译会报错 brew tap bazelbuild/tap brew extract bazel bazelbuild/tap --version 5.3.2 brew install bazel@5.3.2 注意 当我执行如上发现brew并没有5.3.1版本,找到历史版本,发现比较接近的有5.3.2,将版本号修改并执行指令(versions.json文件中也修改一致,但是bazel版本不能和官方相差太大,会报错). 如果和我一样之前已经安装了新版本,需要链接到下载的旧版本: brew install bazelbuild/tap/bazel@5.3.2 brew link bazel@5.3.2 ","date":"2023-01-28","objectID":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/:4:0","tags":["Telegram","iOS"],"title":"Telegram-iOS编译打包","uri":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"编译Xcode工程 复制配置到电脑根目录 mkdir -p $HOME/telegram-configuration cp -R build-system/example-configuration/* $HOME/telegram-configuration/ cp -R build-system/appstore-configuration.json $HOME/telegram-configuration/ cp -R build-system/fake-codesigning/profiles $HOME/telegram-configuration/provisioning/ 创建缓存文件夹(可选) mkdir -p \"$HOME/telegram-bazel-cache\" 最终我的电脑根目录下结构如图所示: 目录结构 脚本生成 python3 build-system/Make/Make.py \\ --cacheDir=\"$HOME/telegram-bazel-cache\" \\ generateProject \\ --configurationPath=\"$HOME/telegram-configuration/appstore-configuration.json\" \\ --disableExtensions \\ --codesigningInformationPath=\"$HOME/telegram-configuration/provisioning\" python3 build-system/Make/Make.py –cacheDir=\"$HOME/telegram-bazel-cache\" generateProject –configurationPath=\"$HOME/telegram-configuration/appstore-configuration.json\" –codesigningInformationPath=\"$HOME/telegram-configuration/provisioning\" 到此Xcode工程成功生成,友情提示代码注释几乎没有… ","date":"2023-01-28","objectID":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/:5:0","tags":["Telegram","iOS"],"title":"Telegram-iOS编译打包","uri":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"真机运行问题 打开app,白屏或者黑屏,原因是app-group 没有添加,在Xcode工程配置上添加自己设置好的即可. ","date":"2023-01-28","objectID":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/:6:0","tags":["Telegram","iOS"],"title":"Telegram-iOS编译打包","uri":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/"},{"categories":["ios"],"content":"打包 打开HOME/telegram-configuration/路径下的variables.bzl(就是上一步复制到电脑根目录的配置文件的路径),原配置如下: telegram_bundle_id = \"ph.telegra.Telegraph\" telegram_api_id = \"8\" telegram_api_hash = \"7245de8e747a0d6fbe11f7cc14fcc0bb\" telegram_team_id = \"C67CF9S4VU\" telegram_app_center_id = \"0\" telegram_is_internal_build = \"false\" telegram_is_appstore_build = \"true\" telegram_appstore_id = \"686449807\" telegram_app_specific_url_scheme = \"tg\" telegram_premium_iap_product_id = \"org.telegram.telegramPremium.monthly\" telegram_aps_environment = \"production\" telegram_enable_siri = True telegram_enable_icloud = True telegram_enable_watch = True 待施工. 还没有进行打包. ","date":"2023-01-28","objectID":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/:7:0","tags":["Telegram","iOS"],"title":"Telegram-iOS编译打包","uri":"/telegram%E7%BC%96%E8%AF%91%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"主要记录Xcode使用遇到的一些问题","date":"2023-01-17","objectID":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/","tags":["iOS","Xcode"],"title":"Xcode相关问题记录","uri":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"前言 本文主要记录Xcode使用遇到的一些问题,以及当时版本的解决方案. ","date":"2023-01-17","objectID":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:1:0","tags":["iOS","Xcode"],"title":"Xcode相关问题记录","uri":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"Xcode下载 主要有两种途径: ","date":"2023-01-17","objectID":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:2:0","tags":["iOS","Xcode"],"title":"Xcode相关问题记录","uri":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"方式1: App Store 苹果商店搜索Xcode即可下载. 优点: 可自动更新. 缺点: 安装的时候经常会遇到最后卡住,或者安装不上等问题. ","date":"2023-01-17","objectID":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:2:1","tags":["iOS","Xcode"],"title":"Xcode相关问题记录","uri":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"方式2: 官网下载Xip包 下载地址,登录苹果账号进行下载. 优点: 弥补了方式1的缺点,并且历史版本也可以下载安装. 缺点: 无法自动更新下一个版本. ","date":"2023-01-17","objectID":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:2:2","tags":["iOS","Xcode"],"title":"Xcode相关问题记录","uri":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"重装Xcode之后,Cocoapods报错问题 ","date":"2023-01-17","objectID":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:3:0","tags":["iOS","Xcode"],"title":"Xcode相关问题记录","uri":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"如下报错: /.rvm/rubies/ruby-3.0.0/lib/ruby/gems/3.0.0/gems/cocoapods-1.11.3/lib/cocoapods/command.rb:128:in `git_version': Failed to extract git version from `git --version` (\"xcrun: error: active developer path (\\\\\"/Users/wangzhu/Downloads/Xcode.app/Contents/Developer\\\\\") does not exist\\\\nUse `sudo xcode-select --switch path/to/Xcode.app` to specify the Xcode that you wish to use for command line developer tools, or use `xcode-select --install` to install the standalone command line developer tools.\\\\nSee `man xcode-select` for more details.\\\\n\") (RuntimeError) from /Users/wangzhu/.rvm/rubies/ruby-3.0.0/lib/ruby/gems/3.0.0/gems/cocoapods-1.11.3/lib/cocoapods/command.rb:140:in `verify_minimum_git_version!' from /Users/wangzhu/.rvm/rubies/ruby-3.0.0/lib/ruby/gems/3.0.0/gems/cocoapods-1.11.3/lib/cocoapods/command.rb:49:in `run' from /Users/wangzhu/.rvm/rubies/ruby-3.0.0/lib/ruby/gems/3.0.0/gems/cocoapods-1.11.3/bin/pod:55:in `\u003ctop (required)\u003e' from /usr/local/bin/pod:25:in `load' from /usr/local/bin/pod:25:in `\u003cmain\u003e' from /Users/wangzhu/.rvm/rubies/ruby-3.0.0/bin/ruby_executable_hooks:22:in `eval' from /Users/wangzhu/.rvm/rubies/ruby-3.0.0/bin/ruby_executable_hooks:22:in `\u003cmain\u003e' ","date":"2023-01-17","objectID":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:3:1","tags":["iOS","Xcode"],"title":"Xcode相关问题记录","uri":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"解决办法: 1.终端执行下面命令 xcode-select --install admoni 2.然后尝试执行 pod --version 如果正常显示版本号,命令行工具已正常工作,到此解决.如果还是报错看步骤3. 3.到此如果cocoapods还是无法正常使用,执行上面步骤1提示如下: xcode-select: error: command line tools are already installed, use \"Software Update\" in System Settings to install updates 按照提示更新下工具: softwareupdate --install -a 执行步骤2查看版本号正常显示版本,到此解决. ","date":"2023-01-17","objectID":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/:3:2","tags":["iOS","Xcode"],"title":"Xcode相关问题记录","uri":"/xcode%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"平时在开发中遇到需求或是在社区中发现了一些优秀且实用的iOS相关开源库","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"前言 平时在开发中遇到需求或是在社区中发现了一些优秀且实用的iOS相关开源库时,我会进行记录.这些库涵盖了开发和完整项目应用两方面,并无特定排名.当发现有用的库时,我会立刻进行记录. 说明 本文没有排名，默认状态为维护中。如果停止维护，将会在其上面加上停止维护的提示。根据规则，如果一年及以上没有提交记录，将会判定为停止维护。时间截止以标注记录时间为准。如果你有优秀的库推荐,欢迎评论! ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:1:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"完整App ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:2:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"框架 名称 简述 语言 记录时间 维护情况 【Texture(AsyncDisplayKit)】 一款异步渲染的UI框架 Swift\u0026OC 2023.01.14 - 【QMUIKit】 是一个致力于提高项目UI开发效率的UI框架 OC 2023.01.14 - ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:3:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"UI 名称 简述 语言 记录时间 维护情况 【MJRefresh】 下拉/上拉刷新控件 OC 2023.01.17 - ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:4:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"多线程 ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:5:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"网络 ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:6:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"数据存储 ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:7:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"动画 ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:8:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"多媒体 ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:9:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"图像 ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:10:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"安全 ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:11:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"工具 ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:12:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"测试调试 ","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:13:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"数据结构/算法","date":"2023-01-14","objectID":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/:14:0","tags":["iOS","开源"],"title":"iOS开源三方库汇总记录","uri":"/%E4%B8%89%E6%96%B9%E5%BA%93%E8%AE%B0%E5%BD%95/"},{"categories":["iOS"],"content":"UITableView使过程中遇到的一些问题记录","date":"2023-01-06","objectID":"/uitableview/","tags":["iOS"],"title":"UITableView使用记录","uri":"/uitableview/"},{"categories":["iOS"],"content":"UITableView的type ","date":"2023-01-06","objectID":"/uitableview/:1:0","tags":["iOS"],"title":"UITableView使用记录","uri":"/uitableview/"},{"categories":["iOS"],"content":"UITableView的类型(type) public enum Style : Int, @unchecked Sendable { case plain = 0 // 通用类 case grouped = 1 // 分组模式 @available(iOS 13.0, *) case insetGrouped = 2 // iOS13以后支持的API,给组加圆角,效果如下 } insetGrouped ","date":"2023-01-06","objectID":"/uitableview/:1:1","tags":["iOS"],"title":"UITableView使用记录","uri":"/uitableview/"},{"categories":["iOS"],"content":"iOS15系统之后type为grouped时,头部有间距 if #available(iOS 15.0, *) { tableView.sectionHeaderTopPadding = 0 } if (@available(iOS 15.0, *)) { _tableView.sectionHeaderTopPadding = 0; } ","date":"2023-01-06","objectID":"/uitableview/:1:2","tags":["iOS"],"title":"UITableView使用记录","uri":"/uitableview/"},{"categories":["iOS"],"content":"type为grouped时,组间距问题 func tableView(_ tableView: UITableView, heightForFooterInSection section: Int) -\u003e CGFloat { return 0 } func tableView(_ tableView: UITableView, viewForFooterInSection section: Int) -\u003e UIView? { return UIView() } ","date":"2023-01-06","objectID":"/uitableview/:1:3","tags":["iOS"],"title":"UITableView使用记录","uri":"/uitableview/"},{"categories":["HTML"],"content":"a元素的伪类,link 一般用来表示没有访问过的链接(正常的链接)","date":"2022-12-05","objectID":"/%E5%85%83%E7%B4%A0%E7%9A%84%E4%BC%AA%E7%B1%BB/","tags":["HTML"],"title":"Web学习笔记 - a元素的伪类","uri":"/%E5%85%83%E7%B4%A0%E7%9A%84%E4%BC%AA%E7%B1%BB/"},{"categories":["HTML"],"content":" \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003cstyle\u003e /* link 一般用来表示没有访问过的链接(正常的链接) */ a:link { color: red; } /* visited 用来表示访问过的链接 由于隐私的原因,visited这个伪类只能修改链接的颜色. */ a:visited { color: yellow; } /* :hover 用来表示鼠标移入的状态 */ a:hover { color: aqua; font-size: 50px; } /* :active 用来表示鼠标点击 */ a:active { color: blue; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 1.没有访问过的链接 2.访问过的链接 --\u003e \u003ca href=\"https://www.baidu.com\"\u003e访问过的链接\u003c/a\u003e \u003cbr\u003e \u003ca href=\"https://www.baidu.com123\"\u003e没有访问过的链接\u003c/a\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-05","objectID":"/%E5%85%83%E7%B4%A0%E7%9A%84%E4%BC%AA%E7%B1%BB/:0:0","tags":["HTML"],"title":"Web学习笔记 - a元素的伪类","uri":"/%E5%85%83%E7%B4%A0%E7%9A%84%E4%BC%AA%E7%B1%BB/"},{"categories":["Web"],"content":"复合选择器,关系选择器,属性选择器,伪类选择器,伪元素选择器","date":"2022-12-04","objectID":"/%E9%80%89%E6%8B%A9%E5%99%A8/","tags":["HTML"],"title":"Web学习笔记 - 选择器","uri":"/%E9%80%89%E6%8B%A9%E5%99%A8/"},{"categories":["Web"],"content":"复合选择器 \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003cstyle\u003e /* 将所有的段落设置为红色(字体) 元素选择器 作用,根据标签名来选中指定的元素 语法:标签名{} 例子:p{} h1{} dic{} */ /* p{ color: red; } h1{ color: red; } */ /* 将`儿童乡间不相识`设置红色 id选择器 作用:根据元素的id属性值选中一个元素 语法:#id属性值{} 例子:#box{} #red{} */ /* #red{ color: red; } */ /* 将`秋水共长天一色`和`落霞与孤鹜齐飞` 设置为红色 类选择器 作用:根据元素的class属性值选中一组元素 语法: .class属性值 例子: .bule .red .abc */ /* .red{ color: red; } .abc{ font-size: 15px; } */ /* 通配选择器 作用:选中页面中的所有元素 语法: * */ *{ color: red; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003ch1 class=\"red\"\u003e我是标题\u003c/h1\u003e \u003cp\u003e少小离家老大回\u003c/p\u003e \u003cp\u003e乡音无改鬓毛衰\u003c/p\u003e \u003c!-- 多个类选择时使用空格隔开; --\u003e \u003cp class=\"red abc\"\u003e儿童相见不相识\u003c/p\u003e \u003cp\u003e笑问客从何处来\u003c/p\u003e \u003c!-- class 是一个标签的属性,它和id类似,不同的是class可以重复使用 可以通过class属性来为元素分组 --\u003e \u003cp class=\"red\"\u003e秋水共长天一色\u003c/p\u003e \u003cp\u003e落霞与孤鹜齐飞\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003cstyle\u003e /* 将class为red的元素设置为红色(字体) */ .red{ color: red; } /* 将class为red的div字体大小设置为30px */ /* 交集选择器 作用:选中同时符合多个条件的元素 语法:选择器1选择器2选择器3...{} 注意点:交集选择器中如果有元素选择器,必须使用元素选择器开头 */ /* 比如下面就是 元素选择器+类选择器 */ /* 与的关系\u0026 */ div.red{ font-size: 30px; } /* 选择器分组(并集选择器) 作用:同时选择多个选择器对应的元素 语法:选择器1,选择器2...{} */ /* 或的关系|| */ h1,span{ color: blue; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003cdiv class=\"red\"\u003e我的div\u003c/div\u003e \u003cp class=\"red\"\u003e我是p\u003c/p\u003e \u003ch1 \u003e标题\u003c/h1\u003e \u003cspan \u003e哈哈\u003c/span\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/%E9%80%89%E6%8B%A9%E5%99%A8/:1:0","tags":["HTML"],"title":"Web学习笔记 - 选择器","uri":"/%E9%80%89%E6%8B%A9%E5%99%A8/"},{"categories":["Web"],"content":"关系选择器 \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003cstyle\u003e /* 为div的子元素span设置一个字体颜色红色 (为div直接包含的span设置一个字体颜色) 子元素选择器 作用: 选中指定父元素的指定子元素 语法: 父元素 \u003e 子元素 */ /* div.box \u003e span { color: red; } */ /* 后代元素选择器: 作用: 选中指定元素内的指定后代元素 语法: 祖先 后代 */ /* div span { color: blue; } */ /* div \u003e p \u003e span { color: orange; } */ /* 选中下一个兄弟 语法: 前一个 + 后一个 (要紧挨着) 选中下边所有的兄弟 语法: 兄 ~ 弟 */ p + span { color: aqua; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 父元素 - 直接包含子元素的元素叫做父元素 子元素 - 直接被父元素包含的元素叫子元素 祖先元素 - 直接或间接包含后代元素的元素叫祖先元素 - 一个元素的父元素也是它的祖先元素 后代元素 - 直接或者间接被祖先元素包含的元素叫做后代元素 - 子元素也是后代元素 兄弟元素 - 拥有相同父元素的元素是兄弟元素 --\u003e \u003cdiv class=\"box\"\u003e我是一个div \u003cp\u003e我的div中的p \u003cspan\u003e 我是p中的span \u003c/span\u003e \u003c/p\u003e \u003cspan\u003e我的div中的span\u003c/span\u003e \u003c/div\u003e \u003cspan\u003e 我是div外的span1 \u003c/span\u003e \u003cp\u003e 我是div外的p \u003c/p\u003e \u003cspan\u003e 我是div外的span2 \u003c/span\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/%E9%80%89%E6%8B%A9%E5%99%A8/:2:0","tags":["HTML"],"title":"Web学习笔记 - 选择器","uri":"/%E9%80%89%E6%8B%A9%E5%99%A8/"},{"categories":["Web"],"content":"属性选择器 \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003cstyle\u003e /* [属性名] 选择含有指定属性的元素 [属性名=属性值] 选择含有指定属性和属性值的元素 [属性名^=属性值] 选择属性值以指定值开头的元素 [属性名$=属性值] 选择属性值以指定值结尾的元素 [属性名*=属性值] 选择属性值中含有某值的元素 */ /* p[title=abc] { color: orange; } */ /* p[title^=abc]{ color: red; } */ /* p[title$=abc]{ color: orange; } */ p[title*=e]{ color: aqua; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003cp title=\"abc\"\u003e少小离家老大回\u003c/p\u003e \u003cp title=\"abcd\"\u003e乡音无改鬓毛衰\u003c/p\u003e \u003cp title=\"adsiaje\"\u003e儿童相见不相识\u003c/p\u003e \u003cp\u003e笑问客从何处来\u003c/p\u003e \u003cp\u003e秋水共长天一色\u003c/p\u003e \u003cp\u003e落霞与孤鹜齐飞\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/%E9%80%89%E6%8B%A9%E5%99%A8/:3:0","tags":["HTML"],"title":"Web学习笔记 - 选择器","uri":"/%E9%80%89%E6%8B%A9%E5%99%A8/"},{"categories":["Web"],"content":"伪类选择器 \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003cstyle\u003e p{ font-size: 20px; } /* 伪元素,表示页面中一些特殊的并不真实的存在的元素(特殊的位置) 伪元素使用 :: 开头 ::first-letter 表示第一个字母 ::first-line 表示第一行 ::selection 表示选中的内容 ::before 表示元素的起始 ::after 表示元素的结束 -before atfer 必须结合content属性来使用 */ p::first-letter { font-size: 50px; } p::first-line { background-color: blue; } p::selection { background-color: yellow; } div::before { content: \"abc\"; color: red; } div::after { content: \"haha\"; color: greenyellow; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003cq\u003e hello \u003c/q\u003e \u003cp\u003e 这是一个p标签 \u003c/p\u003e \u003cdiv\u003ehello hello hello\u003c/div\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/%E9%80%89%E6%8B%A9%E5%99%A8/:4:0","tags":["HTML"],"title":"Web学习笔记 - 选择器","uri":"/%E9%80%89%E6%8B%A9%E5%99%A8/"},{"categories":["Web"],"content":"伪元素选择器 \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003cstyle\u003e p{ font-size: 20px; } /* 伪元素,表示页面中一些特殊的并不真实的存在的元素(特殊的位置) 伪元素使用 :: 开头 ::first-letter 表示第一个字母 ::first-line 表示第一行 ::selection 表示选中的内容 ::before 表示元素的起始 ::after 表示元素的结束 -before atfer 必须结合content属性来使用 */ p::first-letter { font-size: 50px; } p::first-line { background-color: blue; } p::selection { background-color: yellow; } div::before { content: \"abc\"; color: red; } div::after { content: \"haha\"; color: greenyellow; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003cq\u003e hello \u003c/q\u003e \u003cp\u003e 这是一个p标签 \u003c/p\u003e \u003cdiv\u003ehello hello hello\u003c/div\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/%E9%80%89%E6%8B%A9%E5%99%A8/:5:0","tags":["HTML"],"title":"Web学习笔记 - 选择器","uri":"/%E9%80%89%E6%8B%A9%E5%99%A8/"},{"categories":["Web"],"content":"css用来设置网页中元素的样式","date":"2022-12-04","objectID":"/css%E7%AE%80%E4%BB%8B/","tags":["HTML"],"title":"Web学习笔记 - CSS简介","uri":"/css%E7%AE%80%E4%BB%8B/"},{"categories":["Web"],"content":"简介 \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c!-- 第二种方式(内部样式表) - 将样式编写到head中的style标签里 然后通过css的选择器来选中元素并为其设置各种样式 可以同时为多个标签设置样式,并且修改时只需修改一处即可全部应用 - 内部样式表更加方便对样式进行复用 - 问题: 我们的内部样式只能对一个网页起作用 它里面的样式不能跨页面复用 --\u003e \u003c!-- \u003cstyle\u003e /* 所有的p元素 */ p{color: red; font-size: 30px;} \u003c/style\u003e --\u003e \u003c!-- 第三种方式(外部样式表) - 可以将CSS样式编写到一个外部的CSS文件中 然后通过link标签来引入外部的css文件 - 外部样式需要通过link标签进行引入 意味着只要想使用这些样式的网页都可以对其使用,使样式可以再不同页面之间进行复用 - 将样式编写到外部的css文件中,可以使用到浏览器的缓存机制 从而加快的网页的加载速度,提高用户的体验 --\u003e \u003clink rel=\"stylesheet\" href=\"./style.css\"\u003e \u003c!-- p{ color: red; font-size: 30px; } --\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 网页分成三个部分: 结构(html) 表现(css) 行为(JavaScript) CSS - 层叠样式表 - 网页实际上是一个多层的结构,通过css可以分别为网页的每一个层来设置样式 而最终我们能看到的至少网页的最上边一层 - 总之一句话,css用来设置网页中元素的样式 --\u003e \u003c!-- 使用css来修改元素的样式 第一种方式(内联样式,或者叫行内样式) - 在标签内部通过style属性来设置元素的样式 - 问题: 使用内联样式,样式只能对一个标签生效 如果希望影响到多个元素必须每个元素复制一遍 并且当样式发送变化时,我们必须一个一个修改 - 注意: 开发时绝对不要使用内联样式 --\u003e \u003c!-- \u003cp style=\"color: red; font-size: 30px;\"\u003e少小离家老大回,乡音无改鬓毛衰\u003c/p\u003e \u003cp style=\"color: red; font-size: 30px;\"\u003e今天天气真不错\u003c/p\u003e --\u003e \u003cp\u003e少小离家老大回,乡音无改鬓毛衰\u003c/p\u003e \u003cp\u003e今天天气真不错\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/css%E7%AE%80%E4%BB%8B/:1:0","tags":["HTML"],"title":"Web学习笔记 - CSS简介","uri":"/css%E7%AE%80%E4%BB%8B/"},{"categories":["Web"],"content":"语法 \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003cstyle\u003e /* CSS中的注释,注释中内容会自动被浏览器忽略 CSS的基本语法: 选择器 声明块 选择器,通过选择器可以选中页面中的指定元素 比如 p 的作用就是选中页面中所有的 p 元素 声明块,通过声明块来指定要为元素设置的样式 声明块由一个一个的声明组成 声明是一个名值对结构 一个样式名对应一个样式值,名和值之间以`:`链接,以`;`结尾 */ p{ color: red; font-size: 30px; } h1{ color: blue; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003ch1\u003e我是h1\u003c/h1\u003e \u003cp\u003e今天天气真不错\u003c/p\u003e \u003cp\u003e今天天气真不错\u003c/p\u003e \u003cp\u003e今天天气真不错\u003c/p\u003e \u003cp\u003e今天天气真不错\u003c/p\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/css%E7%AE%80%E4%BB%8B/:2:0","tags":["HTML"],"title":"Web学习笔记 - CSS简介","uri":"/css%E7%AE%80%E4%BB%8B/"},{"categories":["Web"],"content":"内联框架,用于向当前页面中引入一个其他页面","date":"2022-12-04","objectID":"/%E5%86%85%E8%81%94%E6%A1%86%E6%9E%B6/","tags":["HTML"],"title":"Web学习笔记 - 内联框架","uri":"/%E5%86%85%E8%81%94%E6%A1%86%E6%9E%B6/"},{"categories":["Web"],"content":" \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 内联框架,用于向当前页面中引入一个其他页面 src 指定网页的路径 frameborder 指定内联框架的边框 --\u003e \u003ciframe src=\"https://www.bilibili.com\" width=\"800\" height=\"600\" frameborder=\"0\"\u003e\u003c/iframe\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/%E5%86%85%E8%81%94%E6%A1%86%E6%9E%B6/:0:0","tags":["HTML"],"title":"Web学习笔记 - 内联框架","uri":"/%E5%86%85%E8%81%94%E6%A1%86%E6%9E%B6/"},{"categories":["Web"],"content":"图片标签用于向当前页面中引入一个外部图片","date":"2022-12-04","objectID":"/%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE/","tags":["HTML"],"title":"Web学习笔记 - 图片标签","uri":"/%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE/"},{"categories":["Web"],"content":" \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 图片标签用于向当前页面中引入一个外部图片 使用img标签来引入外部图片,img标签是一个自结束标签 img这种元素用于替换元素(基于块和行内元素之间,具有两种元素的特点) 属性: scr 属性指定的是外部图片的路径(路径规则和超链接是一样的) alt 属性是图片的描述,这个描述默认情况下不会显示,有些浏览器无法加载时显示 搜索引擎会根据alt中的内容来识别图片,如果不写alt属性,则图片不会被搜索引擎收录 width 宽度(单位是像素) height 高度 - 如果宽度和高度中只修改了一个,另一个会等比例缩放 注意: 一般情况在pc端,不建议修改图片的大小 但是在移动端,经常需要对图片进行缩放(主要大图缩小) 图片的格式: jpeg(jpg) - 支持的颜色比较丰富,不支持透明效果,不支持动图 - 一般用来显示照片 gif - 支持的颜色比较少,支持简单透明,支持动图 - 适合颜色单一的图片,动图 png - 支持的颜色丰富,支持复杂透明,不支持动图 - 颜色丰富,复杂透明图片(专为网页而生) webp - 这种格式是谷歌新推出的专门用来表示网页中的图片格式 - 它具备其他图片格式所有的优点,而且文件大小特别小 - 缺点,兼容性不好 base64 (不是图片格式) - 将图片使用base64进行编码,这样可以将图片转换为字符,通过字符的形式来引入图片 - 一般都是一些和网页一起加载的图片才会使用base64 效果一样,用小的 效果不一样,用效果好的 --\u003e \u003cimg src=\"./下载.jpeg\" alt=\"京东\"\u003e \u003cbr\u003e \u003cimg src=\"https://img95.699pic.com/photo/50136/1351.jpg_wh300.jpg\" alt=\"美女\"\u003e \u003cbr\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE/:0:0","tags":["HTML"],"title":"Web学习笔记 - 图片标签","uri":"/%E5%9B%BE%E7%89%87%E6%A0%87%E7%AD%BE/"},{"categories":["Web"],"content":"当我们需要跳转一个服务器内部的页面时,一般我们都会使用相对路径","date":"2022-12-04","objectID":"/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/","tags":["HTML"],"title":"Web学习笔记 - 相对路径","uri":"/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/"},{"categories":["Web"],"content":" \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 当我们需要跳转一个服务器内部的页面时,一般我们都会使用相对路径 相对路径都会使用.或者..开头 ./ 表示当前文件所在的目录 ../ 表示当前文件所在目录的上一级 ./可以省略不写, 如果不写./也不写../则就相当于写./ --\u003e \u003ca href=\"../7列表.html\"\u003e内部相对路径跳转\u003c/a\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-04","objectID":"/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/:0:0","tags":["HTML"],"title":"Web学习笔记 - 相对路径","uri":"/%E7%9B%B8%E5%AF%B9%E8%B7%AF%E5%BE%84/"},{"categories":["Web"],"content":"超链接可以让我们从一个页面跳转到其他页面.","date":"2022-12-03","objectID":"/%E8%B6%85%E9%93%BE%E6%8E%A5/","tags":["HTML"],"title":"Web学习笔记 - 超链接","uri":"/%E8%B6%85%E9%93%BE%E6%8E%A5/"},{"categories":["Web"],"content":" \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 超链接可以让我们从一个页面跳转到其他页面, 或者是当前页面的其他位置 使用 a 标签来定义超链接 属性: href 指定跳转的目标路径 - 值可以是一个外部网站的地址 - 值也可以是一个内部网站的地址 超链接也是一个行内元素,在 a 标签中可以嵌套除它自身外任何元素 --\u003e \u003ca href=\"https://www.baidu.com\"\u003e百度\u003c/a\u003e \u003cbr\u003e \u003ca href=\"https://www.baidu.com\"\u003e百度\u003c/a\u003e \u003cbr\u003e \u003ca href=\"7列表.html\"\u003e内部页面\u003c/a\u003e \u003c/body\u003e \u003c/html\u003e \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- target 属性, 用来指定超链接打开的位置 可选值: _self 默认值,当前页中打开超链接 _blank 在一个新的页面中打开超链接 --\u003e \u003ca href=\"https://www.baidu.com\" target=\"_blank\"\u003e打开百度\u003c/a\u003e \u003cbr\u003e \u003c!-- 在开发中可以将#作为超链接路径的占位符使用 --\u003e \u003ca href=\"#\"\u003e这是一个新的超链接\u003c/a\u003e \u003cbr\u003e \u003c!-- 可以使用JavaScript:; 来作为href属性,此时点击这个超链接什么也不会发生 --\u003e \u003ca href=\"javascript:;\"\u003e这是一个新的超链接\u003c/a\u003e \u003cbr\u003e \u003ca href=\"bottom\"\u003e去底部\u003c/a\u003e \u003c!-- 可以直接将超链接的href属性设置为#,这样点击超链接后, 页面不会发送跳转,而是转到当前页面的顶部的位置 可以调整到页面的指定位置,只需讲href属性设置 #目标元素的id id属性(唯一不重复的) - 每一个标签都可以添加一个id属性 - id属性就是元素的唯一标识,同一个页面中不能出现重复的id属性; --\u003e \u003ca id=\"bottom\" href=\"#\"\u003e回到顶部\u003c/a\u003e \u003cbr\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-03","objectID":"/%E8%B6%85%E9%93%BE%E6%8E%A5/:0:0","tags":["HTML"],"title":"Web学习笔记 - 超链接","uri":"/%E8%B6%85%E9%93%BE%E6%8E%A5/"},{"categories":["Web"],"content":"HTML中的有序列表和无序列表","date":"2022-12-02","objectID":"/%E5%88%97%E8%A1%A8/","tags":["HTML"],"title":"Web学习笔记 - 列表","uri":"/%E5%88%97%E8%A1%A8/"},{"categories":["Web"],"content":" \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 列表(list) 1. 铅笔 2. 尺子 3. 橡皮 在html中也可以创建列表,html列表一共有三种 1. 有序列表 2. 无序列表 3. 定义列表 有序列表,使用ol标签来创建有序列表 使用li表示列表项 无序列表,使用ul标签来创建无序列表 使用li表示列表项 定义列表,使用dl标签来创建一个定义列表 使用dt来表示定义的内容 使用dd来对内容进行解释说明 列表之间可以互相嵌套 --\u003e \u003cul\u003e \u003cli\u003e\u003c/li\u003e \u003c/ul\u003e \u003col\u003e \u003cli\u003e\u003c/li\u003e \u003c/ol\u003e \u003cdl\u003e \u003cdt\u003e结构\u003c/dt\u003e \u003cdd\u003e结构表示网页的结构,结构用来规定网页中哪里是标题,哪里是段落\u003c/dd\u003e \u003c/dl\u003e \u003cul\u003e \u003cli\u003e aa \u003cul\u003e \u003cli\u003eaa-1\u003c/li\u003e \u003cli\u003eaa-2\u003c/li\u003e \u003c/ul\u003e \u003c/li\u003e \u003c/ul\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-02","objectID":"/%E5%88%97%E8%A1%A8/:0:0","tags":["HTML"],"title":"Web学习笔记 - 列表","uri":"/%E5%88%97%E8%A1%A8/"},{"categories":["docs"],"content":"Hugo 文章通用配置,gitalk评论设置","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["docs"],"content":"文章目录 # 目录设置 [markup.tableOfContents] startLevel = 2 # 代表从第几级标题开始生成目录 endLevel = 6 # 代表从第几级标题结束目录 ordered = true # 目录排序 ","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/:1:0","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["docs"],"content":"文章通用配置 打开archetypes/default.md文件进行编辑: --- title: \"{{ replace .Name \"-\" \" \" | title }}\" date: {{ .Date }} draft: false categories: [\"Web\"] tags: [\"HTML\"] keywords: [\"HTML\"] --- ","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/:2:0","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["docs"],"content":"常用指令 hugo new posts 文章.md # 发布文章 hugo # 编译 hugo server -D # 启动本地服务 ","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/:3:0","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["docs"],"content":"loveit主题相关 代码块识别语言高亮,配置文件路径: /themes/LoveIt/assets/css/_variables.scss ","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/:4:0","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["docs"],"content":"链接 链接 - 普通链接 {{\u003c link \"https://andy90s.github.io/\" \u003e}} 或者 {{\u003c link href=\"https://andy90s.github.io/\" content=\"https://andy90s.github.io/\" \u003e}} {{\u003c link \"mailto:contact@qq.com\" \u003e}} 或者 {{\u003c link href=\"mailto:contact@qq.com\" content=\"mailto:contact@qq.com\" \u003e}} {{\u003c link \"https://andy90s.github.io/\" Andy90s \u003e}} 或者 {{\u003c link href=\"https://andy90s.github.io/\" content=Andy90s \u003e}} \u003c!-- 停留带标题 --\u003e {{\u003c link \"https://andy90s.github.io/\" Andy90s \"Visit Andy90s!\" \u003e}} 或者 {{\u003c link href=\"https://andy90s.github.io/\" content=Andy90s title=\"Visit Andy90s!\" \u003e}} 效果如下: https://andy90s.github.io/ 或者 https://andy90s.github.io/ mailto:contact@qq.com 或者 mailto:contact@qq.com Andy90s 或者 Andy90s Andy90s 或者 Andy90s 链接 - 内部跳转链接 \u003c!-- ref绝对路径 relref相对路径 --\u003e {{\u003c ref \"path/to/document.md#锚点\" \u003e}} {{\u003c relref \"path/to/document.md#锚点\" \u003e}} 例如跳转到本文的文章目录锚点: [跳转到其他文章锚点]({{\u003c relref \"其他文章.md#文章目录\" \u003e}}) [跳转到文章目录]({{\u003c relref \"../other/hugo常见问题.md#文章目录\" \u003e}}) 效果: 跳转到文章目录 ","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/:4:1","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["docs"],"content":"gitalk评论设置 ","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/:5:0","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["docs"],"content":"github生成application auth 生成方法:打开github设置 - develop setting - OAuth Apps - 选择新建 新建OAuth ","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/:5:1","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["docs"],"content":"得到秘钥,粘贴到配置中 [params.page.comment.gitalk] enable = true owner = \"andy90s\" repo = \"andy90s.github.io\" clientId = \"上面拿到的id\" clientSecret = \"上面生成的秘钥\" id = \"location.pathname\" 注意 上述评论配置为(hugo+loveit主题),其他配置差别不大,注意repo应填写仓库名即可 id按照上述配置,会自动生成issue ","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/:5:2","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["docs"],"content":"参考 主题文档 - 扩展 Shortcodes ","date":"2022-12-02","objectID":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/:6:0","tags":["hugo"],"title":"Hugo常见问题","uri":"/hugo%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/"},{"categories":["Web"],"content":"在使用html标签时,应该关注的是标签的语义,而不是样式.","date":"2022-12-01","objectID":"/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/","tags":["HTML"],"title":"Web学习笔记 - 语义化标签","uri":"/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/"},{"categories":["Web"],"content":" \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 在网页中HTML专门用来负责网页的结构 所以在使用html标签时,应该关注的是标签的语义,而不是样式 标题标签: h1~h6 一共六级标题 从h1~h6重要性递减,h1最重要,h6最不重要 h1在网页中的重要性仅次于title标签,一般情况下一个页面只会有一个h1 一般情况下标题标签只会使用到h1~h3,h4~h6很少用 标题标签都是块元素 块元素,在页面中独占一行的元素(block element) --\u003e \u003ch1\u003e一级标题\u003c/h1\u003e \u003ch2\u003e二级标题\u003c/h2\u003e \u003ch3\u003e三级标题\u003c/h3\u003e \u003ch4\u003e丝级标题\u003c/h4\u003e \u003ch5\u003e五级标题\u003c/h5\u003e \u003ch6\u003e六级标题\u003c/h6\u003e \u003c!-- hgroup 标签用来标题分组,可以将一组相关的标题同时放入hgroup --\u003e \u003chgroup\u003e \u003ch1\u003e大标题\u003c/h1\u003e \u003ch2\u003e小标题\u003c/h2\u003e \u003c/hgroup\u003e \u003c!-- p标签表示页面汇总的一个段落; p也是一个块元素 --\u003e \u003cp\u003e段落1\u003c/p\u003e \u003cp\u003e段落2\u003c/p\u003e \u003c!-- em标签用于表示语音语调的一个加重 在页面中不会独占一行的元素成为行内元素(inline element) --\u003e \u003cp\u003e今天天气\u003cem\u003e真\u003c/em\u003e不错!\u003c/p\u003e \u003c!-- strong 表示强调,重要的内容 --\u003e \u003cp\u003e你今天必须要\u003cstrong\u003e完成作业!\u003c/strong\u003e\u003c/p\u003e 鲁迅说, \u003c!-- blockquote 表示一个引用 --\u003e \u003cblockquote\u003e这句话我是从来没有说过\u003c/blockquote\u003e \u003c!-- q 表示一个短引用 --\u003e 子曰\u003cq\u003e学而时学志,乐呵乐呵!\u003c/q\u003e \u003c!-- br 表示换行 --\u003e \u003cbr\u003e \u003cbr\u003e 今天天气真不错 \u003c/body\u003e \u003c/html\u003e \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 块元素(block element) - 在网页中一般通过块元素对页面进行布局 行内元素(inline element) - 行内元素主要用来包裹文字 - 一般情况下会在块元素中放行内元素,而不会在行内元素中放块元素 - 块元素中基本什么都能放 - p元素中不能放任何的块元素 浏览器在解析网页时,会自动对网页中不符合规范的内容进行修整 比如: 标签写在了根元素的外部 p元素中嵌套了块元素 根元素中出现了除head和body以外的子元素 --\u003e \u003c/body\u003e \u003c/html\u003e \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003cmeta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\"\u003e \u003cmeta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- header 表示网页的头部 main 表示网页的主体部分(一个网页中只会有一个main) footer 表示网页的底部 nav 表示网页的导航 aside 表示主体相关的其他内容(侧边栏) article 文章 section 表示一个独立的区块,上边的标签都不能表示时使用section div 没有语义,就是表示一个区块 span 行内元素,没有语义,一般用于在网页中选中文字 --\u003e \u003cheader\u003e\u003c/header\u003e \u003cmain\u003e\u003c/main\u003e \u003cfooter\u003e\u003c/footer\u003e \u003cnav\u003e\u003c/nav\u003e \u003caside\u003e\u003c/aside\u003e \u003carticle\u003e\u003c/article\u003e \u003csection\u003e\u003c/section\u003e \u003cdiv\u003e\u003c/div\u003e \u003cspan\u003e\u003c/span\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-01","objectID":"/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/:0:0","tags":["HTML"],"title":"Web学习笔记 - 语义化标签","uri":"/%E8%AF%AD%E4%B9%89%E5%8C%96%E6%A0%87%E7%AD%BE/"},{"categories":["Web"],"content":"主要用于设置网页中的一些元数据,元数据不是给用户看","date":"2022-12-01","objectID":"/meta%E6%A0%87%E7%AD%BE/","tags":["HTML"],"title":"Web学习笔记 - Meta标签","uri":"/meta%E6%A0%87%E7%AD%BE/"},{"categories":["Web"],"content":" \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003c!-- meta主要用于设置网页中的一些元数据,元数据不是给用户看 charset 指定网页的字符集 name 指定的数据的名称 content 指定的数据的内容 keywords 表示网站的关键字,可以同时指定多个关键字,关键字之间使用`,`隔开 \u003cmeta name=\"keywords\" content=\"网上购物,网上商城,手机\"\u003e \u003cmeta name=\"keywords\" content=\"网上购物,网上商城,手机\"\u003e --\u003e \u003cmeta name=\"keywords\" content=\"html5,前端,CSS3\"\u003e \u003cmeta name=\"description\" content=\"这是一个非常不错的网站\"\u003e \u003ctitle\u003eDocument\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-01","objectID":"/meta%E6%A0%87%E7%AD%BE/:0:0","tags":["HTML"],"title":"Web学习笔记 - Meta标签","uri":"/meta%E6%A0%87%E7%AD%BE/"},{"categories":["Web"],"content":"在网页中书写这些特殊字符,则需要使用html中的实体(转义字符)","date":"2022-12-01","objectID":"/%E5%AE%9E%E4%BD%93/","tags":["HTML"],"title":"Web学习笔记 - 实体","uri":"/%E5%AE%9E%E4%BD%93/"},{"categories":["Web"],"content":"实体 \u003c!DOCTYPE html\u003e \u003chtml lang=\"en\"\u003e \u003chead\u003e \u003cmeta charset=\"UTF-8\"\u003e \u003ctitle\u003e实体\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- 在网页中编写的多个空格默认情况会自动被浏览器解析为一个空格 在HTML中有些时候,我们不能直接书写一些特殊符号 比如,多个连续的空格,比如字母两侧的大于和小于号. 如果我们需要在网页中书写这些特殊字符,则需要使用html中的实体(转义字符) 实体的语法: \u0026实体的名字; 空格: \u0026nbsp; --\u003e \u003cp\u003e '今天\u0026nbsp;天气真不错' \u003c/p\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-01","objectID":"/%E5%AE%9E%E4%BD%93/:1:0","tags":["HTML"],"title":"Web学习笔记 - 实体","uri":"/%E5%AE%9E%E4%BD%93/"},{"categories":["Web"],"content":"HTML用于描述页面的结构","date":"2022-12-01","objectID":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/","tags":["HTML"],"title":"Web学习笔记 - HTML相关简介","uri":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/"},{"categories":["Web"],"content":"软件 应用软件C/S架构;C: Client /S: Server 网页端的软件B/S架构; B: Browser ","date":"2022-12-01","objectID":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/:1:0","tags":["HTML"],"title":"Web学习笔记 - HTML相关简介","uri":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/"},{"categories":["Web"],"content":"结构,表现,行为 结构 HTML用于描述页面的结构 表现 CSS用于控制页面中元素的样式 行为 JavaScript用于响应用户操作 ","date":"2022-12-01","objectID":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/:2:0","tags":["HTML"],"title":"Web学习笔记 - HTML相关简介","uri":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/"},{"categories":["Web"],"content":"HTML \u003chtml\u003e\u003c/html\u003e根标签(元素),网页中的所有内容都要写在根元素里边; \u003chead\u003e\u003c/head\u003e头; 不会出现在内容中;主要用来帮助浏览器或搜索引擎来解析网页; \u003cbody\u003e\u003c/body\u003e体; \u003c!-- 文档声明HTML5的规范; --\u003e \u003c!DOCTYPE html\u003e \u003c!-- 告诉浏览器语言(提示是否翻译此页) --\u003e \u003chtml lang=\"en\"\u003e \u003c!-- 根标签(元素),网页中的所有内容都要写根元素里面 --\u003e \u003chtml\u003e \u003c!-- head是网页的头部,head中的内容不会在网页中出现,主要用来帮助浏览器或者搜索引擎来解析网页 --\u003e \u003chead\u003e \u003c!-- meta标签用来设置网页的元数据,这里可以通过meta标签设置网页的字符集,避免乱码问题 --\u003e \u003cmeta charset=\"utf-8\"\u003e \u003c!-- title中的内容会显示在浏览器的标题栏,搜索引擎会主要根据title中的内容来判断网页的主要内容,不会出现在内容中 --\u003e \u003ctitle\u003e网页的基本结构\u003c/title\u003e \u003c/head\u003e \u003c!-- body是html的子元素,表示网页的主体,网页中所有的可见内容都应该写在body里面 --\u003e \u003cbody\u003e \u003c!-- h1网页的一级标题 --\u003e \u003ch1\u003e网页的大标题\u003c/h1\u003e \u003c!-- 大标题,属性问题,空格隔开;--\u003e \u003ch1\u003e这是我的\u003cfont color=\"red\" size=\"18\"\u003e第三个\u003c/font\u003e网页\u003c/h1\u003e \u003c/body\u003e \u003c/html\u003e ","date":"2022-12-01","objectID":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/:3:0","tags":["HTML"],"title":"Web学习笔记 - HTML相关简介","uri":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/"},{"categories":["Web"],"content":"进制: 十进制(日常使用) 特点:满10进1 计数:0 1 2 3 4 5 6 7 8 9 单位数字:10个(0~9) 二进制(计算机底层的进制) 特点:满2进1 计数:0 1 10 11 100 101 110… 单位数字:2个(0,1) 扩展: 所有的数据在计算机底层都会以二进制的形式保存 可以将内存想象为一个有多个小格子组成的容器,每一个格子中可以存储一个1或者一个0 这一个小格子在内存中被称为1位(bit) 8bit = 1byte(字节) 1024byte = 1kb(千字节) 1024kb = 1mb(兆字节) 1024mb = 1gb(吉字节) 1024gb = 1tb(特字节) 1024tb = 1pb 八进制(很少用) 特点:满8进1 计数:0 1 2 3 4 5 6 7 10 … 单位数字:8个(0~7) 十六进制(一般显示一个二进制数字时,都会转换为十六进制) 特点:满16进1 计数:0 1 2 3 4 5 6 7 8 9 a b c d e f 10 11 12 … 1a 1b 1c 1d 1e 1f 20… 单位数字:16个(0~f) ","date":"2022-12-01","objectID":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/:4:0","tags":["HTML"],"title":"Web学习笔记 - HTML相关简介","uri":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/"},{"categories":["Web"],"content":"字符编码 李立超 -\u003e 1100 0011 (编码) 1100 0011 -\u003e 李立超 (解码) 所有的数据在计算机中存储时都是以二进制形式存储的,文字也不例外,所以一段文字在存储到内存中时,都需要转换为二进制编码,当我们读取这段文字时,计算机会将编码转换为字符,供我们阅读 编码 将字符转换为二进制码的过程称为编码 解码 将二进制码转换为字符的过程称为解码 字符集 编码和解码所采用的规则称为字符集 乱码 如果编码和解码采用的字符集不同,就会产生乱码 常见的字符集: ASCII 美国 ISO88591 欧洲扩充 GB2312 国标,中国扩充 GBK UTF-8 万国码,在开发时我们使用的字符集都是UTF-8 ","date":"2022-12-01","objectID":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/:5:0","tags":["HTML"],"title":"Web学习笔记 - HTML相关简介","uri":"/html%E7%9B%B8%E5%85%B3%E7%AE%80%E4%BB%8B/"},{"categories":["Git"],"content":"提交信息由 `Header`+`Body`+`Footer`组成","date":"2022-12-01","objectID":"/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/","tags":["git"],"title":"代码提交规范","uri":"/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/"},{"categories":["Git"],"content":"代码提交记录示例 feat(home): add a homepage feat(首页): 添加一个首页 ","date":"2022-12-01","objectID":"/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/:1:0","tags":["git"],"title":"代码提交规范","uri":"/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/"},{"categories":["Git"],"content":"格式说明 提交信息由 Header+Body+Footer组成 Header:feat: 本次提交类型描述 Body:(home): 功能模块,自己分类 Footer:add a homepage: 具体描述 ","date":"2022-12-01","objectID":"/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/:2:0","tags":["git"],"title":"代码提交规范","uri":"/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/"},{"categories":["Git"],"content":"提交类型说明 type 说明 feat 新增feature fix 修复bug docs 文档修改,比如readme文件 perf 优化 style 修改了代码格式,不修改逻辑,比如删除多余的空格和空行 refactor 代码重构,没有新增功能,也没有修复bug test 测试用例,包含单元测试和集成测试 ci 修改ci配置文件或者脚本,比如jenkins fastlane chore 修改构建脚本,或者增加依赖库,工具等 revert 回滚之前的commit ","date":"2022-12-01","objectID":"/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/:3:0","tags":["git"],"title":"代码提交规范","uri":"/%E4%BB%A3%E7%A0%81%E6%8F%90%E4%BA%A4%E8%A7%84%E8%8C%83/"},{"categories":["docs"],"content":"常用markdown语法(hugo+loveit主题)","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"前言 本文大部分是在hugo+loveit主题两者基础上才有作用,具体参考loveit主题shortcode文档 ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:1:0","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"代码块 ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:2:0","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"TOML baseURL = \"http://example.org/\" # 更改使用 Hugo 构建网站时使用的默认主题 theme = \"LoveIt\" # 网站标题 title = \"我的全新 Hugo 网站\" # 网站语言, 仅在这里 CN 大写 [\"en\", \"zh-CN\", \"fr\", \"pl\", ...] languageCode = \"zh-CN\" # 语言名称 [\"English\", \"简体中文\", \"Français\", \"Polski\", ...] languageName = \"简体中文\" # 是否包括中日韩文字 hasCJKLanguage = true ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:2:1","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"bash git clone https://github.com/dillonzq/LoveIt.git themes/LoveI ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:2:2","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"css @import url('https://fonts.googleapis.com/css?family=Fira+Mono:400,700\u0026display=swap\u0026subset=latin-ext'); $code-font-family: Fira Mono, Source Code Pro, Menlo, Consolas, Monaco, monospace; ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:2:3","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"admonition 注意 注意 admonition note admonition note admonition tip admonition tip 【更多admonition参考】 ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:3:0","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"版本 ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:4:0","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"图片 ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:5:0","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"默认 ![](/images/fengmian4.jpg) ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:5:1","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"控制大小和位置(1) \u003cp align=\"center\"\u003e \u003cimg src=\"/images/fengmian4.jpg\" width=\"200\" /\u003e \u003c/p\u003e \u003ccenter\u003e图示\u003c/center\u003e 图示 ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:5:2","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"控制大小和位置(2) \u003ccenter\u003e \u003cimg width=\"300\" src=\"/images/fengmian4.jpg\"\u003e \u003cdiv style=\"color:black;\"\u003e \u003cb\u003e 图示 \u003c/b\u003e \u003c/div\u003e \u003c/center\u003e 图示 ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:5:3","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["docs"],"content":"控制大小和位置(3) \u003ccenter\u003e {{\u003c image src=\"/images/fengmian4.jpg\" title=\"停留显示\"width=\"50%\" \u003e}} \u003cdiv style=\"color:black;\"\u003e \u003cb\u003e 图示 \u003c/b\u003e \u003c/div\u003e \u003c/center\u003e 技巧 1.此shortcode需loveit主题支持 2.这种方式显示的图片配合loveit主题可以点击放大,停留显示文案等 图示 Bug 主题应该是有bug, 当设置caption图片标题, 会造成width属性失效,所以这里加div标签达到效果 ","date":"2022-11-30","objectID":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/:5:4","tags":["hugo"],"title":"常用markdown语法(hugo)","uri":"/%E5%B8%B8%E7%94%A8markdown%E8%AF%AD%E6%B3%95/"},{"categories":["Git"],"content":"git github问题记录","date":"2022-11-30","objectID":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/","tags":["git"],"title":"Git常见问题汇总","uri":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"},{"categories":["Git"],"content":"生成ssh-key ","date":"2022-11-30","objectID":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/:1:0","tags":["git"],"title":"Git常见问题汇总","uri":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"},{"categories":["Git"],"content":"1. 利用ssh生成秘钥(这里以github平台为例) ssh-keygen -t rsa -C \"youremail@xxx.com\" -f ~/.ssh/github_id_rsa 注意 github_id_rsa是文件名,可自己修改,大部分默认名为id_rsa 如果想要多个平台分开不同秘钥,再次执行上面指令,文件名替换其他,例:gitlab_id_rsa ","date":"2022-11-30","objectID":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/:1:1","tags":["git"],"title":"Git常见问题汇总","uri":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"},{"categories":["Git"],"content":"2. 添加私钥 ssh-add ~/.ssh/github_id_rsa ","date":"2022-11-30","objectID":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/:1:2","tags":["git"],"title":"Git常见问题汇总","uri":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"},{"categories":["Git"],"content":"3. 查看公钥内容并复制到对应的git平台 cat ~/.ssh/os_id_rsa.pub ","date":"2022-11-30","objectID":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/:1:3","tags":["git"],"title":"Git常见问题汇总","uri":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"},{"categories":["Git"],"content":"4. 测试链接 ssh -T git@github.com ","date":"2022-11-30","objectID":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/:1:4","tags":["git"],"title":"Git常见问题汇总","uri":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"},{"categories":["Git"],"content":"gitignore忽略文件不生效 1.准备工作: 删除pods文件,然后提交代码 2.缓存导致不生效,按如下解决: git rm -r --cached . git add . git commit -m 'update gitignore' ","date":"2022-11-30","objectID":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/:2:0","tags":["git"],"title":"Git常见问题汇总","uri":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"},{"categories":["Git"],"content":"github提示账号密码不对 仓库是https拉取,终端提示输入账号密码,怎么输入都不对? 这是因为github不再支持原密码登录,替换为token登录. 解决办法 打开github设置(settings) -\u003e Developer settings -\u003e Personal access tokens -\u003e Tokens 选择新建一个如下图所示,得到一个token字符串,登录的时候密码使用此token替换原来的密码进行登录 设置github token ","date":"2022-11-30","objectID":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/:3:0","tags":["git"],"title":"Git常见问题汇总","uri":"/git%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E6%B1%87%E6%80%BB/"}]